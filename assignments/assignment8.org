
Tasks [1/3]

    [x] Create a assignment8.org file in your assignment repository and document any tool you used in this assignment, regardless of being successful or not. [33.4]
    [ ] Download part1.secret from the reference section, identify the file type and capture the flag. [33.3]
    [ ] Download part2.secret from the reference section, identify the file type and capture the flag. [33.3]

- I have downloaded the two files and run the first one through binwalk. It tells me it is a PNG image with a MySQL database inside it. I do not have MySQL installed on this system (or mariaDB, in my system's case), so I suppose I need to install it. And figure out how to extract the database from the image, given binwalk doesn't want to.
- I am now installing the stego-toolkit. More accurately, I am _attempting_ to install it. It is not really going well. (I'm not sure what's going on with Docker. At least now it's installing the package. It's just taking forever now.)
- I ran check_png.sh (from the stego-toolkit, which _finally_ installed and ran) on both images. Both are, as I suspected, PNGs. (Firefox told me that when I saved them, but confirmation is nice.) part1.secret, as I said already, appears to have a MySQL database in it. part2 has a message hidden in the pixels of the image itself, which I found on the check_png.sh run via the stegoVeritas tool.
- I also found the message for part1.secret via stegoVeritas in the check_png.sh run. In order to be able to read the message, I had to open the image generated by stegoVeritas that I believed held a message in GIMP. I filled in the background with black and messed around with brightness, contrast, and color balance until I was able to read the flag.

- FLAG FOR PART1.SECRET: flag(w3 s3t up ambus 0n l3dg3) (the label for the ledge on the map is also circled when the message is visible)
- FLAG FOR PART2.SECRET: flag(w0ah 5uch 53cr3t m355ag3)
